{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","numberOfRolled","setNumberOfRolled","button1","setButton1","button2","setButton2","button3","setButton3","button4","setButton4","className","onClick","Math","random","n","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gOA6DeA,MA1Df,WAAgB,IAAD,EAC+BC,mBAAS,GADxC,mBACNC,EADM,KACUC,EADV,OAEiBF,mBAAS,MAF1B,mBAENG,EAFM,KAEGC,EAFH,OAGiBJ,mBAAS,MAH1B,mBAGNK,EAHM,KAGGC,EAHH,OAIiBN,mBAAS,MAJ1B,mBAINO,EAJM,KAIGC,EAJH,OAKiBR,mBAAS,MAL1B,mBAKNS,EALM,KAKGC,EALH,KAcb,OACE,qBAAKC,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACE,oDACoB,mCADpB,OAGA,sBAAKA,UAAU,eAAf,UACE,qBACEA,UACE,OACa,OAAZR,EAAoBA,EAAU,aAAe,aAAgB,MAGlE,qBACEQ,UACE,OACa,OAAZN,EAAoBA,EAAU,aAAe,aAAgB,MAGlE,qBACEM,UACE,OACa,OAAZJ,EAAoBA,EAAU,aAAe,aAAgB,MAGlE,qBACEI,UACE,OACa,OAAZF,EAAoBA,EAAU,aAAe,aAAgB,SAKpE,wBAAQE,UAAU,cAAcC,QAzChB,WACpBR,EAAYS,KAAKC,SAAW,IAC5BR,EAAYO,KAAKC,SAAW,IAC5BN,EAAYK,KAAKC,SAAW,IAC5BJ,EAAYG,KAAKC,SAAW,IAC5BZ,GAAkB,SAACa,GAAD,OAAOA,EAAI,MAoCzB,uBAGA,8CACgBd,WC1CTe,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.56200644.chunk.js","sourcesContent":["import \"./App.css\";\nimport { useState } from \"react\";\n\nfunction App() {\n  const [numberOfRolled, setNumberOfRolled] = useState(0);\n  const [button1, setButton1] = useState(null);\n  const [button2, setButton2] = useState(null);\n  const [button3, setButton3] = useState(null);\n  const [button4, setButton4] = useState(null);\n  const onButtonClick = () => {\n    setButton1((Math.random() > 0.5));\n    setButton2((Math.random() > 0.5));\n    setButton3((Math.random() > 0.5));\n    setButton4((Math.random() > 0.5));\n    setNumberOfRolled((n) => n + 1);\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>\n          The royal game of <u>UR</u>.\n        </h1>\n        <div className=\"boxesWrapper\">\n          <div\n            className={\n              \"box\" +\n              (button1 !== null ? (button1 ? \" box-white\" : \" box-black\") : \"\")\n            }\n          />\n          <div\n            className={\n              \"box\" +\n              (button2 !== null ? (button2 ? \" box-white\" : \" box-black\") : \"\")\n            }\n          />\n          <div\n            className={\n              \"box\" +\n              (button3 !== null ? (button3 ? \" box-white\" : \" box-black\") : \"\")\n            }\n          />\n          <div\n            className={\n              \"box\" +\n              (button4 !== null ? (button4 ? \" box-white\" : \" box-black\") : \"\")\n            }\n          />\n        </div>\n\n        <button className=\"link-button\" onClick={onButtonClick}>\n          ROLL DICE\n        </button>\n        <p>\n          Roll number: {numberOfRolled}\n        </p>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}